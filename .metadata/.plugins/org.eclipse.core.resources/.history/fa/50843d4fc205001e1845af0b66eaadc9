package com.customerService.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestBody;

import com.customerService.dao.CustomerJpaRepository;
import com.customerService.entity.Customer;
import com.customerService.exceptions.UserAlreadyExistedException;
import com.customerService.exceptions.UserNotFoundException;

import java.util.List;
import java.util.Optional;

import javax.transaction.Transactional;

@Service
public class CustomersService {

	@Autowired
	private CustomerJpaRepository customerJpaRepository;

	@Transactional
	public String saveUser(Customer theCustomer) {

//		  String email=theCustomer.getCustomerEmail();
//		  System.out.println(email+"_____");
//		  //System.out.println(customerJpaRepository.findById(email).get()+"_____");
//		  if(customerJpaRepository.findById(email)==null) { throw new
//		  UserAlreadyExistedException("Email :"
//		  +email+" was Existed please try unused Email"); } else { Customer
//		  savedCustomer=customerJpaRepository.save(theCustomer); return
//		  "User saved with Id :"+savedCustomer.getCustomerId(); }
		String email = theCustomer.getCustomerEmail();
		try {

			Customer customer = customerJpaRepository.findById(email).get();

			throw new UserAlreadyExistedException();

		} catch (UserAlreadyExistedException ex) {
			return "email :" + email + " is existed";
		}

		catch (Exception e) {
			Customer savedCustomer = customerJpaRepository.save(theCustomer);
			return savedCustomer.getCustomerName() + " is registered as a user with " +" passwod : " + savedCustomer.getPassword();

		}

	}

	@Transactional
	public List<Customer> getAllCustomer() {

		return customerJpaRepository.findAll();

	}

	public Customer getCustomerbyid(String id)
	{
		try {
			return customerJpaRepository.findById(id).get();
			 
		}
		catch(Exception ex)
		{
			throw new UserNotFoundException("user not found with id :"+id);
		}
	}
}
