package com.customerService.service;

import java.util.Collections;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.customerService.dao.UserRepository;
import com.customerService.model.User;

@Service
public class CustomUserDetailService implements UserDetailsService {
	
	@Autowired
	private UserRepository repository;

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		User user = repository.findByUsername(username);
		CustomUserDetails userDetails = null;
		if(user !=null)
		{
			userDetails = new CustomUserDetails();
			userDetails.setUser(user);
		}
		else {
			throw new UsernameNotFoundException("user not exits with the name" + username);
		}
		
		return userDetails.getUser()(
	            user.getUsername(),
	            user.getPassword(),
	            // Add any additional authorities or roles here
	            Collections.emptyList()
	        );
		
		//return userDetails;
	}

//	@Override
//    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
//        User user = repository.findByUsername(username);
//            .orElseThrow(() -> new UsernameNotFoundException("User not found"));
//
//        return new org.springframework.security.core.userdetails.User(
//            user.getUsername(),
//            user.getPassword(),
//            // Add any additional authorities or roles here
//            Collections.emptyList()
//        );
//    }

}