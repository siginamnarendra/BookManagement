package com.customerService.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.customerService.client.BookClient;
import com.customerService.client.CartClient;
import com.customerService.entity.Customer;
import com.customerService.exceptions.UserNotFoundException;
import com.customerService.model.Book;
import com.customerService.model.Cart;
import com.customerService.service.CustomersService;

@RestController
@RequestMapping("/customerService")
public class CustomerServiceRestController {

	@Autowired
	private CustomersService customerService;
	@Autowired
	private BookClient bookClient;
	@Autowired
	private CartClient cartClient;
	
	@GetMapping("/getCustomers")
	public List<Customer> getAllCustomers()
	{
		return customerService.getAllCustomer();
	}
	@GetMapping("/getCustomerbyid/{id}")
	public Customer getCustomer(@PathVariable String id)
	{
		return customerService.getCustomerbyid(id);
	}
	@GetMapping("listBooks")
	public List<Book> getAllBooks()
	{
		return bookClient.getAllBooks();
	}
	@GetMapping("/getBook/{bookId}")
	public List<Book> getBookById()
	{
		return bookClient.getAllBooks();
	}
	@GetMapping("/checkBookQuantity/{bookId}")
	public Integer checkBookQuantity(@PathVariable("book_id") int bookId)
	{
		return bookClient.checkBookQuantity(bookId);
	}
	@PostMapping("/addtocart")
	public Cart addToCart(@RequestBody Cart cart) {
		return cartClient.addToCart(cart);
	}
	@DeleteMapping("/deletefromcart/{cartItemId}")
	public String deleteFromCart(@PathVariable int cartItemId) {
		return cartClient.deleteFromCart(cartItemId);
	}
	@GetMapping("/getitems/{customerId}")
	public Cart getCartItems(@PathVariable String customerId) {
		return cartClient.getCartItems(customerId);
		
	}
	 
}
